(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{655:function(t,s,e){"use strict";e.r(s);var a=e(23),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("To use the Group Functions to create an ID token or an access token using a dynamic group whitelist, create a Groups claim and a Groups scope in the Custom Authorization Server. For this example, we are adding a claim for use with an access token.")]),t._v(" "),e("RequireClassicUI"),t._v(" "),e("ol",[e("li",[e("p",[t._v("In the Admin Console, from the "),e("strong",[t._v("Security")]),t._v(" menu, select "),e("strong",[t._v("API")]),t._v(", and then select the authorization server that you want to configure.")])]),t._v(" "),e("li",[e("p",[t._v("Navigate to the "),e("strong",[t._v("Claims")]),t._v(" tab and click "),e("strong",[t._v("Add Claim")]),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("Enter a name for the claim. For this example, name it "),e("strong",[t._v("dynamic_group")]),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("In the "),e("strong",[t._v("Include in token type")]),t._v(" section, leave "),e("strong",[t._v("Access Token")]),t._v(" selected.")])]),t._v(" "),e("li",[e("p",[t._v("Leave "),e("strong",[t._v("Expression")]),t._v(" as the "),e("strong",[t._v("Value type")]),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("Enter the following expression as the "),e("strong",[t._v("Value")]),t._v(": "),e("code",[t._v('Groups.startsWith("OKTA", "IT", 10)')])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Important:")]),t._v(" When you use "),e("code",[t._v("Groups.startWith")]),t._v(", "),e("code",[t._v("Groups.endsWith")]),t._v(", or "),e("code",[t._v("Groups.contains")]),t._v(", the "),e("code",[t._v("pattern")]),t._v(" argument is matched and populated on the "),e("code",[t._v("name")]),t._v(" attribute rather than the group's email (for example, when using G Suite). If you are targeting groups that may have duplicate group names (such as Google Groups), use the "),e("code",[t._v("getFilteredGroups")]),t._v(" Group function instead.")]),t._v(" "),e("p",[t._v("Example: "),e("code",[t._v('getFilteredGroups({"00gml2xHE3RYRx7cM0g3"}, "group.name", 40) )')])]),t._v(" "),e("p",[t._v("See the Parameter Examples section of "),e("RouterLink",{attrs:{to:"/docs/guides/customize-tokens-static/static-allowlist/#use-group-functions-for-static-group-whitelists"}},[t._v("Use group functions for static group whitelists")]),t._v(" for more information on the parameters used in this Group function.")],1)])]),t._v(" "),e("li",[e("p",[t._v("Click "),e("strong",[t._v("Create")]),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("Select the "),e("strong",[t._v("Scopes")]),t._v(" tab and click "),e("strong",[t._v("Add Scope")]),t._v(".")])]),t._v(" "),e("li",[e("p",[t._v("Add "),e("strong",[t._v("groups")]),t._v(" as the scope "),e("strong",[t._v("Name")]),t._v(" and "),e("strong",[t._v("DisplayName")]),t._v(", and then select the "),e("strong",[t._v("Metadata")]),t._v(" check box.")])]),t._v(" "),e("li",[e("p",[t._v("Click "),e("strong",[t._v("Create")]),t._v(".")])])]),t._v(" "),e("h3",{attrs:{id:"request-an-access-token-that-contains-the-groups-claim"}},[t._v("Request an access token that contains the Groups claim "),e("a",{staticClass:"header-anchor header-link",attrs:{href:"#request-an-access-token-that-contains-the-groups-claim"}},[e("svg",{attrs:{viewBox:"0 0 512 512"}},[e("path",{attrs:{fill:"currentColor",d:"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 01-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0120.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0020.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 00-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"}})])])]),t._v(" "),e("p",[t._v("To test the full authentication flow that returns an access token, build your request URL. For the specific steps on building the request URL, receiving the response, and decoding the JWT, see "),e("GuideLink",{attrs:{link:"../request-token-claim"}},[t._v("Request a token that contains the claim")]),t._v(".")],1),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note:")]),t._v(" The scopes that you need to include as query parameters are "),e("code",[t._v("openid")]),t._v(" and "),e("code",[t._v("groups")]),t._v(".")])]),t._v(" "),e("p",[t._v("The resulting URL looks something like this:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X GET\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${yourOktaDomain}")]),t._v("/oauth2/"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${authServerId}")]),t._v('/v1/authorize?client_id=examplefa39J4jXdcCwWA\n&response_type=token\n&scope=openid%20groups\n&redirect_uri=https%3A%2F%2FyourRedirectUriHere.com\n&state=myState\n&nonce=myNonceValue"')]),t._v("\n")])])]),e("p",[t._v("The decoded JWT looks something like this:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ver"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jti"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AT.lsZ5XmKiK4KxpKs2IDUBKMRgfMhiB2i2hTBZEM7epAk"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iss"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://${yourOktaDomain}/oauth2/ausocqn9bk00KaKbZ0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"aud"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://${yourOktaDomain}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iat"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1574270245")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1574273845")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cid"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0oaoiuhhch8VRtBnC0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"uid"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00uixa271s6x7qt8I0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"groups"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"openid"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sub"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"joe.user@okta.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dynamic_group"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IT"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("NextSectionLink",[t._v("Next Steps")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);