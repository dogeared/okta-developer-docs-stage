(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{650:function(t,e,a){"use strict";a.r(e);var n=a(38),o=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Once you have followed the instructions to set up and customize your authorization server, you can test it by sending any one of the API calls that returns OAuth 2.0 and/or OpenID Connect tokens.")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Note:")]),t._v(" The "),a("code",[t._v("{authServerId}")]),t._v(" for the default server is "),a("code",[t._v("default")]),t._v(".")])]),t._v(" "),a("p",[t._v("You can find a full description of Okta's relevant APIs on the "),a("RouterLink",{attrs:{to:"/docs/reference/api/oidc/"}},[t._v("OpenID Connect & OAuth 2.0 API")]),t._v(" page.")],1),t._v(" "),a("p",[t._v("The following are a few things that you can try to ensure that your authorization server is functioning as expected.")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Note:")]),t._v(" This isn't meant to be an exhaustive testing reference, but only to show some examples.")])]),t._v(" "),a("h3",{attrs:{id:"openid-connect-configuration"}},[t._v("OpenID Connect configuration "),a("a",{staticClass:"header-anchor header-link",attrs:{href:"#openid-connect-configuration"}},[a("svg",{attrs:{viewBox:"0 0 512 512"}},[a("path",{attrs:{fill:"currentColor",d:"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 01-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0120.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0020.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 00-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"}})])])]),t._v(" "),a("p",[t._v("To verify that your server was created and has the expected configuration values, you can send an API request to the server's OpenID Connect Metadata URI: "),a("code",[t._v("https://${yourOktaDomain}/oauth2/${authServerId}/.well-known/openid-configuration")]),t._v(" using an HTTP client or by typing the URI inside of a browser. This returns information about the OpenID configuration of your authorization server.")]),t._v(" "),a("p",[t._v("For more information on this endpoint, see how to "),a("RouterLink",{attrs:{to:"/docs/reference/api/oidc/#well-known-openid-configuration"}},[t._v("retrieve authorization server OpenID Connect metadata")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"custom-scopes-and-claims"}},[t._v("Custom scopes and claims "),a("a",{staticClass:"header-anchor header-link",attrs:{href:"#custom-scopes-and-claims"}},[a("svg",{attrs:{viewBox:"0 0 512 512"}},[a("path",{attrs:{fill:"currentColor",d:"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 01-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0120.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0020.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 00-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"}})])])]),t._v(" "),a("p",[t._v("You can retrieve a list of all scopes for your authorization server, including custom ones, using this endpoint:")]),t._v(" "),a("p",[a("code",[t._v("/api/v1/authorizationServers/${authServerId}/scopes")])]),t._v(" "),a("p",[t._v("For more information on this endpoint, see "),a("RouterLink",{attrs:{to:"/docs/reference/api/authorization-servers/#get-all-scopes"}},[t._v("Get all scopes")]),t._v(".")],1),t._v(" "),a("p",[t._v("If you created any custom claims, the easiest way to confirm that they have been successfully added is to use this endpoint:")]),t._v(" "),a("p",[a("code",[t._v("/api/v1/authorizationServers/${authServerId}/claims")])]),t._v(" "),a("p",[t._v("For more information on this endpoint, see "),a("RouterLink",{attrs:{to:"/docs/reference/api/authorization-servers/#get-all-claims"}},[t._v("Get all claims")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"testing-an-openid-connect-flow"}},[t._v("Testing an OpenID Connect flow "),a("a",{staticClass:"header-anchor header-link",attrs:{href:"#testing-an-openid-connect-flow"}},[a("svg",{attrs:{viewBox:"0 0 512 512"}},[a("path",{attrs:{fill:"currentColor",d:"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 01-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0120.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0020.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 00-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"}})])])]),t._v(" "),a("p",[t._v("To test your authorization server more thoroughly, you can try a full authentication flow that returns an ID Token. To do this, you need a client application in Okta with at least one user assigned to it.")]),t._v(" "),a("p",[t._v("For more information you can read about:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://help.okta.com/en/prod/okta_help_CSH.htm#ext_Apps_App_Integration_Wizard-oidc",target:"_blank",rel:"noopener noreferrer"}},[t._v("The OpenID Connect Application Wizard"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://help.okta.com/en/prod/okta_help_CSH.htm#ext-assign-apps",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to assign a user to an application"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("You need the following values from your Okta OpenID Connect application, both of which can be found on your application's "),a("strong",[t._v("General")]),t._v(" tab:")]),t._v(" "),a("ul",[a("li",[t._v("Client ID")]),t._v(" "),a("li",[t._v("A valid Redirect URI")])]),t._v(" "),a("p",[t._v("Once you have an OpenID Connect application set up, and a user assigned to it, you can try the authentication flow.")]),t._v(" "),a("p",[t._v("First, you need the authorization server's authorization endpoint, which you can retrieve using the server's Metadata URI: "),a("code",[t._v("https://${yourOktaDomain}/oauth2/${authServerId}/.well-known/openid-configuration")]),t._v(".")]),t._v(" "),a("p",[t._v("It looks like this:\n"),a("code",[t._v("https://${yourOktaDomain}/oauth2/${authServerId}/v1/authorize")])]),t._v(" "),a("p",[t._v("Add the following URL query parameters to the URL:")]),t._v(" "),a("ul",[a("li",[t._v("Your OpenID Connect application's "),a("code",[t._v("client_id")]),t._v(" and "),a("code",[t._v("redirect_uri")])]),t._v(" "),a("li",[t._v("A "),a("code",[t._v("scope")]),t._v(", which for the purposes of this test are "),a("code",[t._v("openid")]),t._v(" and "),a("code",[t._v("profile")])]),t._v(" "),a("li",[t._v("A "),a("code",[t._v("response_mode")]),t._v(", which you can set to "),a("code",[t._v("fragment")])]),t._v(" "),a("li",[t._v("A "),a("code",[t._v("state")]),t._v(" value and a "),a("code",[t._v("nonce")]),t._v(" value")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Note:")]),t._v(" A "),a("code",[t._v("nonce")]),t._v(" value isn't required if the "),a("code",[t._v("response_type")]),t._v(" is "),a("code",[t._v("code")]),t._v(".")])]),t._v(" "),a("p",[t._v("All of the values are fully documented here: "),a("RouterLink",{attrs:{to:"/docs/reference/api/oidc/#authorize"}},[t._v("Obtain an Authorization Grant from a user")]),t._v(".")],1),t._v(" "),a("p",[t._v("The resulting URL looks like this:")]),t._v(" "),a("p",[a("code",[t._v("https://${yourOktaDomain}/oauth2/${authServerId}/v1/authorize?client_id=examplefa39J4jXdcCwWA&response_type=id_token&response_mode=fragment&scope=openid%20profile&redirect_uri=https%3A%2F%2FyourRedirectUriHere.com&state=WM6D&nonce=YsG76jo")])]),t._v(" "),a("p",[t._v("If you paste this into your browser, you are redirected to the sign-in page for your Okta org with a URL that looks like this:")]),t._v(" "),a("p",[a("code",[t._v("https://${yourOktaDomain}/login/login.htm?fromURI=%2Foauth2%2Fv1%2Fauthorize%2Fredirect%3Fokta_key%aKeyValueWillBeHere")])]),t._v(" "),a("p",[t._v("Enter the credentials for a user who is mapped to your Open ID Connect application, and you are directed to the "),a("code",[t._v("redirect_uri")]),t._v(" that you specified. An ID Token and any state that you defined are also included:")]),t._v(" "),a("p",[a("code",[t._v("https://yourRedirectUriHere.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImluZUdjZVQ4SzB1SnZyWGVUX082WnZLQlB2RFowO[...]z7UvPoMEIjuBTH-zNkTS5T8mGbY8y7532VeWKA&state=WM6D")])]),t._v(" "),a("p",[t._v("To check the returned ID Token, you can copy the value and paste it into any JWT decoder (for example: "),a("a",{attrs:{href:"https://jsonwebtoken.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jsonwebtoken.io"),a("OutboundLink")],1),t._v("). Using a JWT decoder you can check the payload to confirm that it contains all of the claims that you are expecting, including custom ones. If you included a "),a("code",[t._v("nonce")]),t._v(" value, that is also included:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00uawpa4r4Zybz9On0h7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Smith"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"locale"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en-US"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ver"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iss"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://${yourOktaDomain}/oauth2/${authServerId}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"aud"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fa39J40exampleXdcCwWA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1498328175")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1498331912")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jti"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID.fL39TTtvfBQoyHVkrbaqy9hWooqGOOgWau1W_y-KNyY"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pwd"')]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examplefz3q4Yd3Zk70h7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nonce"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"YsG76jo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"preferred_username"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"john@example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"given_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"family_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Smith"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"zoneinfo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"America/Los_Angeles"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"updated_at"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1498155598")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auth_time"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1498328174")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"preferred_honorific"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Commodore"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this example, we see the "),a("code",[t._v("nonce")]),t._v(" with value "),a("code",[t._v("YsG76jo")]),t._v(" and the custom claim "),a("code",[t._v("preferred_honorific")]),t._v(" with value "),a("code",[t._v("Commodore")]),t._v(".")]),t._v(" "),a("p",[t._v("At this point you have set up your authorization server and confirmed that it is working.")])])}),[],!1,null,null,null);e.default=o.exports}}]);