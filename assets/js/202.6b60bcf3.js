(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{726:function(t,e,s){"use strict";s.r(e);var a=s(38),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("When a request is sent to the Okta Org Authorization Server's "),s("code",[t._v("/authorize")]),t._v(" endpoint, it validates all of the requested scopes in the request against the app's grants collection. The scope is granted if it exists in the app's grants collection.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" Only the Super Admin role has permissions to grant scopes to an app.")])]),t._v(" "),s("ol",[s("li",[t._v("From the Developer Console, click "),s("strong",[t._v("Applications")]),t._v(", and then select the OpenID Connect (OIDC) or OAuth 2.0 app that you want to add grants to.")]),t._v(" "),s("li",[t._v("Select the "),s("strong",[t._v("Okta API Scopes")]),t._v(" tab and then click "),s("strong",[t._v("Grant")]),t._v(" for each of the scopes that you want to add to the application's grant collection.")])]),t._v(" "),s("p",[t._v("Alternatively, you can add grants using the "),s("code",[t._v("/grants")]),t._v(" API. The following is an example request to create a grant for the "),s("code",[t._v("okta.users.read")]),t._v(" scope.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Accept: application/json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authorization: SSWS '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${api_token}")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n          "scopeId": "okta.users.read",\n          "issuer": "https://{yourOktaDomain}"\n    }\'')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${yourOktaDomain}")]),t._v('/api/v1/apps/client_id/grants"')]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" You can find a list of available values for "),s("code",[t._v("scopeId")]),t._v(" in the "),s("GuideLink",{attrs:{link:"../scopes"}},[t._v("Scopes and supported endpoints")]),t._v(" section.")],1)]),t._v(" "),s("NextSectionLink")],1)}),[],!1,null,null,null);e.default=n.exports}}]);